{"sourceFilePath":"C:\\Source\\Demos\\testing-javascript\\mutations\\generic-diff.js","mutatorName":"BlockStatement","status":1,"replacement":"{\n}","location":{"start":{"line":169,"column":13},"end":{"line":187,"column":9}},"range":[6117,6912],"testsRan":["Generic difference calculator verifies that two arrays, where the old has less elements will result in a Added result","Generic difference calculator verifies that two arrays, where the old has more elements will result in a Removed result","Generic difference calculator verifies that two arrays with same complex values (different property order) result in an unchanged result","Generic difference calculator verifies that two arrays with different primitive values result in an modified result","Generic difference calculator verifies that two arrays with payload changes detects changes using key extractors","Generic difference calculator verifies that two objects with array properties with payload changes detects changes using key extractors"],"originalLines":"        else {\r\n            // we're using full object matching\r\n            for (var lindex = 0; lindex < leftArray.length; lindex++) {\r\n                var left = leftArray[lindex];\r\n                var found = false;\r\n                for (var rindex = 0; rindex < addedItems.length; rindex++) {\r\n                    var right = addedItems[rindex];\r\n                    if (this.getDifference(left, right, name, keyExtractors).changeType === DiffType.Unchanged) {\r\n                        unchangedItems.push(right);\r\n                        addedItems.splice(rindex, 1);\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (!found) {\r\n                    removedItems.push(left);\r\n                }\r\n            }\r\n        }","mutatedLines":"        else {\n}"}