{"sourceFilePath":"C:\\Source\\Demos\\testing-javascript\\mutations\\groupby.js","mutatorName":"BlockStatement","status":1,"replacement":"{\n}","location":{"start":{"line":1,"column":30},"end":{"line":20,"column":1}},"range":[30,604],"testsRan":["Array Group By grouping an empty array should return empty result","Array Group By one item array should result in one group","Array Group By two items with different keys should result in two group","Array Group By two items with same keys should result in one group","Array Group By five items should properly be grouped in two groups","Array Group By even and odd numbers should be properly separated","Array Group By group-reducing an empty array should return empty result","Array Group By one item array should result in one group with ignoring reducer","Array Group By one item array should result in one group with summing reducer","Array Group By two items with different keys should result in two group with ignoring reducer","Array Group By two items with different keys should result in two group with summing reducer","Array Group By two items with same keys should result in one group with ignoring reducer","Array Group By two items with same keys should result in one group with summing reducer","Array Group By five items should properly be grouped in two groups with ignoring reducer","Array Group By five items should properly be grouped in two groups with summing reducer","Array Group By even and odd numbers should be properly separated and reduced (summing reducer)","Array Group By even and odd numbers should be properly separated and reduced (multiplying reducer)","Array Group By even and odd numbers should be properly separated and reduced (object reducer)","Array Group By even and odd numbers should be properly separated and reduced (array reducer)","Generic difference calculator verifies that generic diff of two undefineds returns that nothing is changed","Generic difference calculator verifies that generic diff of undefined and value returns that value is Added","Generic difference calculator verifies that generic diff of value and undefined returns that value is Removed","Generic difference calculator verifies that generic diff of two nulls returns that nothing is changed","Generic difference calculator verifies that generic diff of null and value returns that value is Added","Generic difference calculator verifies that generic diff of value and null returns that value is Removed","Generic difference calculator verifies that generic diff of undefined and null returns that value is Modified","Generic difference calculator verifies that generic diff of null and undefined returns that value is Modified","Generic difference calculator verifies that generic diff of string and number returns that value is TypeChanged","Generic difference calculator verifies that two objects with same properties in the same order result in an unchanged result","Generic difference calculator verifies that two complex objects with same properties in the same order result in an unchanged result","Generic difference calculator verifies that two objects with same properties in different order result in an unchanged result","Generic difference calculator verifies that two complex objects with same properties in different order result in an unchanged result","Generic difference calculator verifies that two objects with same properties, different values in the same order result in an Modified result","Generic difference calculator verifies that two complex objects with same properties with different outer values in different order result in an correct modified result","Generic difference calculator verifies that two complex objects with same properties with different inner values in different order result in an correct modified result","Generic difference calculator verifies that two objects with different properties result in an Modified result","Generic difference calculator verifies that array / object comparison results in a TypeChanged result","Generic difference calculator verifies that object / array comparison results in a TypeChanged result","Generic difference calculator verifies that two arrays with same primitive values result in an unchanged result","Generic difference calculator verifies that two arrays, where the old has less elements will result in a Added result","Generic difference calculator verifies that two arrays, where the old has more elements will result in a Removed result","Generic difference calculator verifies that two arrays with same complex values result in an unchanged result","Generic difference calculator verifies that two arrays with same complex values (different property order) result in an unchanged result","Generic difference calculator verifies that two arrays with different primitive values result in an modified result","Generic difference calculator verifies that two arrays with payload changes detects changes using key extractors","Generic difference calculator verifies that two objects with array properties with payload changes detects changes using key extractors"],"originalLines":"if (!Array.prototype.groupBy) {\r\n    Array.prototype.groupBy = function (keySelector) {\r\n        var result = [];\r\n        var array = this;\r\n        this.forEach(function (item, index) {\r\n            var key = keySelector(item, index);\r\n            var keyItem = result.find(function (r) { return r.key === key; });\r\n            if (!keyItem) {\r\n                result.push({\r\n                    key: key,\r\n                    items: [item]\r\n                });\r\n            }\r\n            else {\r\n                keyItem.items.push(item);\r\n            }\r\n        });\r\n        return result;\r\n    };\r\n}","mutatedLines":"if (!Array.prototype.groupBy) {\n}"}