{"path":"C:\\Source\\Demos\\testing-javascript\\mutations\\groupby.js","content":"if (!Array.prototype.groupBy) {\r\n    Array.prototype.groupBy = function (keySelector) {\r\n        var result = [];\r\n        var array = this;\r\n        this.forEach(function (item, index) {\r\n            var key = keySelector(item, index);\r\n            var keyItem = result.find(function (r) { return r.key === key; });\r\n            if (!keyItem) {\r\n                result.push({\r\n                    key: key,\r\n                    items: [item]\r\n                });\r\n            }\r\n            else {\r\n                keyItem.items.push(item);\r\n            }\r\n        });\r\n        return result;\r\n    };\r\n}\r\nif (!Array.prototype.groupReduce) {\r\n    Array.prototype.groupReduce = function (keySelector, reducer, initial) {\r\n        var result = [];\r\n        var array = this;\r\n        var initFunc;\r\n        if (Array.isArray(initial)) {\r\n            initFunc = function () { return initial.slice(); };\r\n        }\r\n        else if (typeof (initial) === \"object\" && initial != null) {\r\n            initFunc = function () { return Object.assign({}, initial); };\r\n        }\r\n        else {\r\n            initFunc = function () { return initial; };\r\n        }\r\n        this.forEach(function (item, index) {\r\n            var key = keySelector(item, index);\r\n            var keyItem = result.find(function (r) { return r.key === key; });\r\n            if (!keyItem) {\r\n                keyItem = {\r\n                    key: key,\r\n                    value: initFunc()\r\n                };\r\n                result.push(keyItem);\r\n            }\r\n            keyItem.value = reducer(keyItem.value, item);\r\n            ;\r\n        });\r\n        return result;\r\n    };\r\n}\r\n"}